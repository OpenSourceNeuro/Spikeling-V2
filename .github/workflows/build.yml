name: Build and Release

on:
  push:
    tags:
      - "v*.*.*"

permissions:
  contents: write   # allow pushing artifacts to repo
  packages: write
  actions: write

jobs:
  build-macos:
    name: Build on macOS
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install Python dependencies (split)
        working-directory: GUI/PyQt
        run: |
          python -m pip install --upgrade pip
          pip install --no-cache-dir PySide6==6.9.2 pyinstaller==6.15
          pip install --no-cache-dir numpy==2.3.2 scipy==1.16.1 pandas==2.3.2 pyqtgraph==0.13.7 pyserial==3.5

      - name: Select .spec file
        run: |
          echo "SPEC_FILE=Spikeling-mac.spec" >> $GITHUB_ENV
          echo "OS_NAME=macOS" >> $GITHUB_ENV

      - name: Build with PyInstaller
        working-directory: GUI/PyQt
        run: |
          echo "Using spec file: $SPEC_FILE"
          pyinstaller --clean --log-level=DEBUG "$SPEC_FILE"

      - name: Verify macOS executable
        run: |
          chmod +x GUI/PyQt/dist/Spikeling
          echo "Executable info:"
          ls -lh GUI/PyQt/dist/Spikeling
          GUI/PyQt/dist/Spikeling --help || echo "Help check skipped"

      - name: Package build with additional folders
        run: |
          VERSION=${GITHUB_REF_NAME}
          ZIP_NAME=Spikeling-${VERSION}-${OS_NAME}.zip

          mkdir -p release

          cp GUI/PyQt/dist/Spikeling release/
          chmod +x release/Spikeling

          cp -r GUI/PyQt/Recordings release/
          cp -r GUI/PyQt/Neurons release/
          cp -r GUI/PyQt/Stimuli release/

          mkdir -p GUI/${OS_NAME}
          rm -f GUI/${OS_NAME}/*.zip   # delete ALL previous zips

          zip -r "$ZIP_NAME" release/*
          mv "$ZIP_NAME" GUI/${OS_NAME}/

          echo "ZIP_NAME=$ZIP_NAME" >> $GITHUB_ENV

      - name: Commit zip to repository
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add GUI/${OS_NAME}/Spikeling-*.zip
          git commit -m "Add macOS build artifact for ${GITHUB_REF_NAME}" || echo "No changes to commit"
          git push

      - name: Upload release asset
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          files: GUI/${{ env.OS_NAME }}/${{ env.ZIP_NAME }}
