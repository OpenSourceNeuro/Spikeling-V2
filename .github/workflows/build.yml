name: Build and Release Spikeling GUI

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  build-macos:
    name: Build on macOS
    runs-on: macos-latest

    steps:
      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: main
          persist-credentials: false

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install Python dependencies
        working-directory: GUI/PyQt
        run: |
          python -m pip install --upgrade pip
          pip install --no-cache-dir PySide6==6.9.2 pyinstaller==6.15
          pip install --no-cache-dir numpy==2.3.2 scipy==1.16.1 pandas==2.3.2 pyqtgraph==0.13.7 pyserial==3.5

      - name: Build with PyInstaller
        working-directory: GUI/PyQt
        run: pyinstaller --clean --log-level=DEBUG Spikeling-mac.spec

      - name: Package macOS build
        run: |
          version=${GITHUB_REF_NAME}
          zipName="Spikeling-${version}-macOS.zip"
          mkdir -p release
          cp GUI/PyQt/dist/Spikeling release/
          chmod +x release/Spikeling
          cp -r GUI/PyQt/Recordings release/
          cp -r GUI/PyQt/Neurons release/
          cp -r GUI/PyQt/Stimuli release/
          zip -r "$zipName" release/*
          mkdir -p GUI/macOS
          mv "$zipName" GUI/macOS/
          rm -rf release

      - name: Upload macOS artifact to release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          files: GUI/macOS/Spikeling-${{ github.ref_name }}-macOS.zip
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}

      - name: Cleanup
        run: rm -rf GUI/PyQt/build GUI/PyQt/dist GUI/PyQt/__pycache__

  build-linux:
    name: Build on Linux
    runs-on: ubuntu-latest
    needs: build-macos

    steps:
      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: main
          persist-credentials: false

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install Python dependencies
        working-directory: GUI/PyQt
        run: |
          python -m pip install --upgrade pip
          pip install --no-cache-dir PySide6==6.9.2 pyinstaller==6.15
          pip install --no-cache-dir numpy==2.3.2 scipy==1.16.1 pandas==2.3.2 pyqtgraph==0.13.7 pyserial==3.5

      - name: Build with PyInstaller
        working-directory: GUI/PyQt
        run: pyinstaller --clean --log-level=DEBUG Spikeling-linux.spec

      - name: Package Linux build
        run: |
          version=${GITHUB_REF_NAME}
          zipName="Spikeling-${version}-Linux.zip"
          mkdir -p release
          cp GUI/PyQt/dist/Spikeling release/
          chmod +x release/Spikeling
          cp -r GUI/PyQt/Recordings release/
          cp -r GUI/PyQt/Neurons release/
          cp -r GUI/PyQt/Stimuli release/
          zip -r "$zipName" release/*
          mkdir -p GUI/Linux
          mv "$zipName" GUI/Linux/
          rm -rf release

      - name: Upload Linux artifact to release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          files: GUI/Linux/Spikeling-${{ github.ref_name }}-Linux.zip
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}

      - name: Cleanup
        run: rm -rf GUI/PyQt/build GUI/PyQt/dist GUI/PyQt/__pycache__

  build-windows:
    name: Build on Windows
    runs-on: windows-latest
    needs: build-linux

    steps:
      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: main
          persist-credentials: false

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install Python dependencies
        working-directory: GUI/PyQt
        run: |
          python -m pip install --upgrade pip
          pip install --no-cache-dir PySide6==6.9.2 pyinstaller==6.15
          pip install --no-cache-dir numpy==2.3.2 scipy==1.16.1 pandas==2.3.2 pyqtgraph==0.13.7 pyserial==3.5

      - name: Build with PyInstaller
        working-directory: GUI/PyQt
        run: pyinstaller --clean --log-level=DEBUG Spikeling-win.spec

      - name: Package Windows build
        shell: powershell
        run: |
          $version = "${{ github.ref_name }}"
          $zipName = "Spikeling-$version-Windows.zip"

          New-Item -ItemType Directory -Force -Path release
          Copy-Item -Path "GUI/PyQt/dist/Spikeling.exe" -Destination release/
          Copy-Item -Path "GUI/PyQt/Recordings" -Destination release/ -Recurse
          Copy-Item -Path "GUI/PyQt/Neurons" -Destination release/ -Recurse
          Copy-Item -Path "GUI/PyQt/Stimuli" -Destination release/ -Recurse

          New-Item -ItemType Directory -Force -Path "GUI\Windows"
          Compress-Archive -Path "release\*" -DestinationPath "GUI\Windows\$zipName" -Force

          Remove-Item -Recurse -Force release

      - name: Upload Windows artifact to release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          files: GUI/Windows/Spikeling-${{ github.ref_name }}-Windows.zip
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}

      - name: Cleanup
        run: rm -rf GUI/PyQt/build GUI/PyQt/dist GUI/PyQt/__pycache__
