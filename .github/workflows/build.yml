name: Build and Release

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install system dependencies
        if: runner.os == 'Linux'
        run: sudo apt-get update && sudo apt-get install -y libglib2.0-0 libsm6 libxext6 libxrender1

      - name: Install Python dependencies (split)
        working-directory: GUI/PyQt
        run: |
          python -m pip install --upgrade pip
          pip install --no-cache-dir PySide6==6.9.2 pyinstaller==6.15
          pip install --no-cache-dir numpy==2.3.2 scipy==1.16.1 pandas==2.3.2 pyqtgraph==0.13.7 pyserial==3.5


      - name: Debug macOS specifics
        if: runner.os == 'macOS'
        run: |
          echo "=== PySide6 plugin path ==="
          python -c "from PySide6 import QtCore; print(QtCore.QLibraryInfo.location(QtCore.QLibraryInfo.PluginsPath))"

          echo "=== Contents of GUI/PyQt ==="
          ls -lah GUI/PyQt

          echo "=== .icns file info ==="
          ls -lh GUI/PyQt/Spikeling.icns

      - name: Select .spec file
        run: |
          if [ "${{ runner.os }}" = "Windows" ]; then
            echo "SPEC_FILE=Spikeling-win.spec" >> $GITHUB_ENV
            echo "OS_NAME=Windows" >> $GITHUB_ENV
          elif [ "${{ runner.os }}" = "macOS" ]; then
            echo "SPEC_FILE=Spikeling-mac.spec" >> $GITHUB_ENV
            echo "OS_NAME=macOS" >> $GITHUB_ENV
          else
            echo "SPEC_FILE=Spikeling-linux.spec" >> $GITHUB_ENV
            echo "OS_NAME=Linux" >> $GITHUB_ENV
          fi

      - name: Build with PyInstaller
        working-directory: GUI/PyQt
        run: pyinstaller --clean --log-level=DEBUG  --noupx $SPEC_FILE

      - name: Verify executable
        run: |
          if [ "${{ runner.os }}" = "Windows" ]; then
            GUI/PyQt/dist/Spikeling.exe --help
          else
            chmod +x GUI/PyQt/dist/Spikeling
            GUI/PyQt/dist/Spikeling --help

      - name: Package build with additional folders
        run: |
          VERSION=${GITHUB_REF_NAME}
          ZIP_NAME=Spikeling-${VERSION}-${OS_NAME}.zip

          mkdir -p release

          # Copy executable
          if [ "${{ runner.os }}" = "Windows" ]; then
            cp GUI/PyQt/dist/Spikeling.exe release/
          else
            cp GUI/PyQt/dist/Spikeling release/
            chmod +x release/Spikeling
          fi

          # Copy extra folders
          cp -r GUI/PyQt/Recordings release/
          cp -r GUI/PyQt/Neuron release/
          cp -r GUI/PyQt/Stimuli release/

          # Create OS-specific folder and remove old zip if exists
          mkdir -p GUI/${OS_NAME}
          rm -f GUI/${OS_NAME}/${ZIP_NAME}

          # Create zip
          if [ "${{ runner.os }}" = "Windows" ]; then
            powershell Compress-Archive -Path release/* -DestinationPath $ZIP_NAME
          else
            zip -r $ZIP_NAME release/*
          fi

          # Move zip into GUI/<OS> folder
          mv $ZIP_NAME GUI/${OS_NAME}/

      - name: Cleanup intermediate folders
        run: |
          rm -rf GUI/PyQt/build GUI/PyQt/dist GUI/PyQt/__pycache__ release

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: Spikeling-${{ matrix.os }}
          path: GUI/${{ env.OS_NAME }}/*.zip
