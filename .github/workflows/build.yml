name: Build and Release Spikeling GUI

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  build-macos:
    name: Build on macOS
    runs-on: macos-latest

    steps:
      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: main
          persist-credentials: false

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install Python dependencies
        working-directory: GUI/PyQt
        run: |
          python -m pip install --upgrade pip
          pip install --no-cache-dir PySide6==6.9.2 pyinstaller==6.15
          pip install --no-cache-dir numpy==2.3.2 scipy==1.16.1 pandas==2.3.2 pyqtgraph==0.13.7 pyserial==3.5

      - name: Build with PyInstaller
        working-directory: GUI/PyQt
        run: pyinstaller --clean --log-level=DEBUG Spikeling-mac.spec

      - name: Package build
        run: |
          VERSION=${GITHUB_REF_NAME}
          ZIP_NAME=Spikeling-${VERSION}-macOS.zip
          OS_NAME=macOS
          mkdir -p release
          cp GUI/PyQt/dist/Spikeling release/
          chmod +x release/Spikeling
          cp -r GUI/PyQt/Recordings release/
          cp -r GUI/PyQt/Neurons release/
          cp -r GUI/PyQt/Stimuli release/
          zip -r "$ZIP_NAME" release/*

      - name: Upload macOS build to release
        id: upload_mac
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Attach macOS zip to release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.upload_mac.outputs.upload_url }}
          asset_path: Spikeling-${{ github.ref_name }}-macOS.zip
          asset_name: Spikeling-${{ github.ref_name }}-macOS.zip
          asset_content_type: application/zip

      - name: Cleanup
        run: rm -rf GUI/PyQt/build GUI/PyQt/dist GUI/PyQt/__pycache__ release

  build-linux:
    name: Build on Linux
    runs-on: ubuntu-latest
    needs: build-macos

    steps:
      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: main
          persist-credentials: false

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install Python dependencies
        working-directory: GUI/PyQt
        run: |
          python -m pip install --upgrade pip
          pip install --no-cache-dir PySide6==6.9.2 pyinstaller==6.15
          pip install --no-cache-dir numpy==2.3.2 scipy==1.16.1 pandas==2.3.2 pyqtgraph==0.13.7 pyserial==3.5

      - name: Build with PyInstaller
        working-directory: GUI/PyQt
        run: pyinstaller --clean --log-level=DEBUG Spikeling-linux.spec

      - name: Package build
        run: |
          VERSION=${GITHUB_REF_NAME}
          ZIP_NAME=Spikeling-${VERSION}-Linux.zip
          OS_NAME=Linux
          mkdir -p release
          cp GUI/PyQt/dist/Spikeling release/
          chmod +x release/Spikeling
          cp -r GUI/PyQt/Recordings release/
          cp -r GUI/PyQt/Neurons release/
          cp -r GUI/PyQt/Stimuli release/
          zip -r "$ZIP_NAME" release/*

      - name: Upload Linux build to release
        id: upload_linux
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Attach Linux zip to release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.upload_linux.outputs.upload_url }}
          asset_path: Spikeling-${{ github.ref_name }}-Linux.zip
          asset_name: Spikeling-${{ github.ref_name }}-Linux.zip
          asset_content_type: application/zip

      - name: Cleanup
        run: rm -rf GUI/PyQt/build GUI/PyQt/dist GUI/PyQt/__pycache__ release

  build-windows:
    name: Build on Windows
    runs-on: windows-latest
    needs: build-linux

    steps:
      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: main
          persist-credentials: false

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install Python dependencies
        working-directory: GUI/PyQt
        run: |
          python -m pip install --upgrade pip
          pip install --no-cache-dir PySide6==6.9.2 pyinstaller==6.15
          pip install --no-cache-dir numpy==2.3.2 scipy==1.16.1 pandas==2.3.2 pyqtgraph==0.13.7 pyserial==3.5

      - name: Build with PyInstaller
        working-directory: GUI/PyQt
        run: pyinstaller --clean --log-level=DEBUG Spikeling-win.spec

      - name: Package build
        shell: bash
        run: |
          VERSION=${GITHUB_REF_NAME}
          ZIP_NAME=Spikeling-${VERSION}-Windows.zip
          OS_NAME=Windows
          mkdir -p release
          cp GUI/PyQt/dist/Spikeling.exe release/
          cp -r GUI/PyQt/Recordings release/
          cp -r GUI/PyQt/Neurons release/
          cp -r GUI/PyQt/Stimuli release/
          powershell Compress-Archive -Path release/* -DestinationPath "$ZIP_NAME"

      - name: Upload Windows build to release
        id: upload_win
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Attach Windows zip to release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.upload_win.outputs.upload_url }}
          asset_path: Spikeling-${{ github.ref_name }}-Windows.zip
          asset_name: Spikeling-${{ github.ref_name }}-Windows.zip
          asset_content_type: application/zip

      - name: Cleanup
        run: rm -rf GUI/PyQt/build GUI/PyQt/dist GUI/PyQt/__pycache__ release
